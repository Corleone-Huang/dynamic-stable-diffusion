model:
  base_learning_rate: 1.0e-04 # NOTE: set --scale_lr False
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: "image"
    cond_stage_key: "caption"
    image_size: 16 # 64
    channels: 16 # 4
    cond_stage_trainable: false   # Note: different from the one we trained before
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: True

    scheduler_config: # 10000 warmup steps
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps: [ 10000 ]
        cycle_lengths: [ 10000000000000 ] # incredibly large number to prevent corner cases
        f_start: [ 1.e-6 ]
        f_max: [ 1. ]
        f_min: [ 1. ]

    unet_config:
      target: ldm.modules.diffusionmodules.dynamicmodel.DynamicUNetModel
      params:
        image_size: 32 # unused
        in_channels: 16 # 4
        out_channels: 16 # 4
        model_channels: 160 # 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: True
        legacy: False
        evolution_module_config:
          target: ldm.modules.semantic_evolution.evolution.SimpleAttentionSemanticEvolution
          params:
            visual_dim: 16
            textual_dim: 768
            heads: 12
            dropout: 0.
            version: simple

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        ckpt_path: models/first_stage_models/kl-f16/model.ckpt
        embed_dim: 16
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 16
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 1
          - 2
          - 2
          - 4
          num_res_blocks: 2
          attn_resolutions:
          - 16
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 25
    num_workers: 5
    wrap: false
    train:
      target: ldm.data.coco.CocoTrainValid
      params:
        root: /mnt/data10t/bakuphome20210617/huangmq/git_repo/AdaptiveVectorQuantization/data/coco # data/mscoco
        split: train
        image_resolution: 256 
        transform_type: imagenet_train
        is_eval: False
    validation:
      target: ldm.data.coco.CocoTrainValid
      params:
        root: /mnt/data10t/bakuphome20210617/huangmq/git_repo/AdaptiveVectorQuantization/data/coco # data/mscoco
        split: valid
        image_resolution: 256 
        transform_type: imagenet_val
        is_eval: True


lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 1000
        max_images: 4
        increase_log_steps: False
        log_first_step: False

  trainer:
    benchmark: True